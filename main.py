import telebot
from telebot import types
from custom_handlers import sort_few_tasks, short_sent

TOKEN_BOT = '6395798798:AAFKLPZZaPT4ZzYHM6K5_VWiXdjVh4j6XiE'
bot = telebot.TeleBot(TOKEN_BOT)
buttons_list = []
signal = None 
callback_button = None

@bot.message_handler(commands=['start'])
def start_menu(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è —Ä–∞–¥ —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º –±–æ—Ç–æ–º) –° –Ω–∏–º —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –ø–ª–∞–Ω—ã –Ω–∞ –¥–µ–Ω—å –∏ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ –∏–¥—Ç–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏')
    bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏ /menu')
    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤–≤–µ–¥–∏ /help')

#–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['menu'])
def main_menu(message):
    global signal
    signal = None
    markup = types.InlineKeyboardMarkup()
    button_count = 0
    for i in range(len(buttons_list)):
        short = short_sent(buttons_list[button_count])
        markup.add(types.InlineKeyboardButton(short, callback_data=short))
        button_count += 1
    if len(buttons_list) == 0:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞—á, —Å–æ–∑–¥–∞–π—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π <b>/new</b>', reply_markup=markup, parse_mode='html')
    else:
        bot.send_message(message.chat.id, '–í–æ—Ç –≤–∞—à–∏ –∑–∞–¥–∞—á–∏üóí', reply_markup=markup)
        
#—Å–æ–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
@bot.message_handler(commands=['new'])
def create_new_button(message):
    global signal
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏‚úç')
    signal = 'new'
    bot.register_message_handler(message, text_handler)
    
#–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á
@bot.message_handler(commands=['few'])
def add_few_buttons(message):
    global signal
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ —è –∏—Ö –¥–æ–±–∞–≤–ª—é  –ü—Ä–∏–º–µ—Ä: –ó–∞–¥–∞–Ω–∏–µ, –ó–∞–¥–∞–Ω–∏–µ 2, –ó–∞–¥–∞–Ω–∏–µ 3')
    signal = 'few'
    bot.register_message_handler(message, text_handler)
    
#–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫ –±–æ—Ç—É
@bot.message_handler(commands=['help'])
def help_menu(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –±–æ—Ç–∞', url='https://telegra.ph/Rukovodstvo-k-botu-05-06'))
    bot.send_message(message.chat.id, '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?', reply_markup=markup)
    
#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(content_types=['text'])
def text_handler(message):
    global signal
    global buttons_list
    global callback_button
    if signal == 'new':
        bot.delete_message(message.chat.id, message.message_id-1)
        buttons_list.append(message.text) 
        main_menu(message)
        signal = None
        
    elif signal == 'few':
        bot.delete_message(message.chat.id, message.message_id-1)
        spis_buttons = sort_few_tasks(message.text)
        
        index = 0
        for i in range(len(spis_buttons)):
            buttons_list.append(spis_buttons[index])
            index += 1
        bot.delete_message(message.chat.id, message.message_id)
        main_menu(message)
        signal = None

    elif signal == 'edit':
        index = buttons_list.index(callback_button)
        buttons_list.pop(index)
        buttons_list.insert(index, message.text)
        bot.delete_message(message.chat.id, message.message_id - 1)
        main_menu(message)
  
#callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@bot.callback_query_handler(func=lambda callback: True)
def markup_handler(callback):
    global callback_button
    global signal
    #–∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    if callback.data == 'menu':
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        main_menu(callback.message)
        
    #–∫–Ω–æ–ø–∫–∞ collect –≤ –º–µ–Ω—é –∫–Ω–æ–ø–∫–∏
    elif callback.data == 'collect':
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        buttons_list.remove(callback_button)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='menu'))
        bot.send_message(callback.message.chat.id, '–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞', reply_markup=markup)

    #–∫–Ω–æ–ø–∫–∞ "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
    elif callback.data == 'edit':
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        bot.send_message(callback.message.chat.id,  '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏')
        signal = 'edit'
        bot.register_message_handler(callback.message, text_handler)

    #–≤—ã–≤–æ–¥ –º–µ–Ω—é –≤ –∫–Ω–æ–ø–∫–µ
    button_count = 0
    for i in range(len(buttons_list)):
        if callback.data == short_sent(buttons_list[button_count]):
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            callback_button = buttons_list[button_count]
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='menu')
            btn2 = types.InlineKeyboardButton('‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å‚úÖ', callback_data='collect')
            btn3 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å‚úèÔ∏è', callback_data='edit')
            markup.row(btn2)
            markup.row(btn1, btn3)
            bot.send_message(callback.message.chat.id, buttons_list[button_count], reply_markup=markup)
            break
        else:
            button_count += 1

bot.polling(none_stop = True)

        
